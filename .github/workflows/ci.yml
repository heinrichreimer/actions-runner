name: CI

on:
  push:

jobs:
  docker-build:
    name: 🏗️ Build Docker image
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🧰 Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: 🧰 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: 🏗️ Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
    - name: 📤 Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: /tmp/docker-image.tar
  docker-publish:
    name: 🚀 Publish Docker image
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    permissions:
      packages: write
    needs:
    - docker-build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🧰 Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: 🧰 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: 🔑 Login to GitHub Packages
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: ℹ️ Extract image metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
    - name: 🚀 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        push: true
  github-release:
    name: 🚀 Create GitHub release
    if: github.event_name == 'push' && endsWith(github.event.base_ref, 'main') && startsWith(github.ref, 'refs/tags')
    needs:
    - docker-publish
    - docker-build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: 📥 Check-out
      uses: actions/checkout@v4
    - name: 🚀 Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
